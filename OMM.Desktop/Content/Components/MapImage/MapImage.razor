@using OMM.Desktop.Data.OsuDataProvider
@using OMM.Desktop.Data.Settings
@inject ISettings Settings

<div class="@Bem.Block()" style="background-image: linear-gradient( rgba(0, 0, 0, @strength), rgba(0, 0, 0, @strength) ), url(@pathToBackgroundImage);">
    @if (MapAvailable)
    {
        <div class="@Bem.Element("text-container")">
            <span class="@Bem.Element("text")">@GetArtist()</span>
            <span class="@Bem.Element("text")">@mapCreator</span>
        </div>
        <div class="@Bem.Element("text-container")">
            <span class="@Bem.Element("text")">@GetTitle()</span>
            <span class="@Bem.Element("text")">@difficultyName</span>
        </div>
    }
    else
    {
        <div class="@Bem.Element("text-container")">
            <span>Map unavailable</span>
        </div>
    }
</div>

@code{
    private Bem Bem = new Bem("component-map-image");

    [Parameter]
    public SongSelectionChangedEventArgs SongSelection { get; set; }
    [Parameter]
    public bool MapAvailable { get; set; }

    protected override void OnInitialized()
    {
        this.SongSelection = new SongSelectionChangedEventArgs
        {
            Artist = "",
            DifficultyName = "",
            MapCreator = "",
            PathToBackgroundImage = "",
            Title = "Select any osu!standard ranked or loved map in osu!",
            ArtistUnicode = "",
            TitleUnicode = "",
        };
    }

    protected override void OnParametersSet()
    {
        if (!MapAvailable && SongSelection is null)
        {
            pathToBackgroundImage = "";
            return;
        }
        pathToBackgroundImage = SongSelection.PathToBackgroundImage;
    }

    private string pathToBackgroundImage;
    private string mapCreator => string.IsNullOrWhiteSpace(SongSelection?.MapCreator) ? "" : $"Mapper: {SongSelection.MapCreator}";
    private string difficultyName => string.IsNullOrWhiteSpace(SongSelection?.MapCreator) ? "" : $"[{SongSelection.DifficultyName}]";
    private string emptyFlag => string.IsNullOrWhiteSpace(SongSelection?.PathToBackgroundImage) ? "empty" : null;
    private double strength => string.IsNullOrWhiteSpace(SongSelection?.PathToBackgroundImage) ? 0 : 0.25;

    private string GetArtist()
    {
        if (Settings.UserSettings.PrefersUnicode)
            return SongSelection.ArtistUnicode ?? SongSelection.Artist ?? "";

        return SongSelection.Artist ?? "";
    }

    private string GetTitle()
    {
        if (Settings.UserSettings.PrefersUnicode)
            return SongSelection.TitleUnicode ?? SongSelection.Title ?? "";

        return SongSelection.Title ?? "";
    }
}